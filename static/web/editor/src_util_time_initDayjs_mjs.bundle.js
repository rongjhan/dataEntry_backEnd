"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["src_util_time_initDayjs_mjs"],{

/***/ "./src/util_time/initDayjs.mjs":
/*!*************************************!*\
  !*** ./src/util_time/initDayjs.mjs ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dayjs\": () => (/* reexport default export from named module */ dayjs__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   \"locales\": () => (/* binding */ locales)\n/* harmony export */ });\n/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../node_modules/core-js/modules/es.array.slice.js\");\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../node_modules/core-js/modules/es.object.to-string.js\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dayjs */ \"../node_modules/dayjs/dayjs.min.js\");\n/* harmony import */ var _parseFormat_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./parseFormat.mjs */ \"./src/util_time/parseFormat.mjs\");\n/* harmony import */ var dayjs_plugin_localeData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dayjs/plugin/localeData.js */ \"../node_modules/dayjs/plugin/localeData.js\");\n/* harmony import */ var dayjs_plugin_updateLocale_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! dayjs/plugin/updateLocale.js */ \"../node_modules/dayjs/plugin/updateLocale.js\");\n/* harmony import */ var dayjs_locale_zh_tw_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! dayjs/locale/zh-tw.js */ \"../node_modules/dayjs/locale/zh-tw.js\");\n/* harmony import */ var dayjs_locale_zh_cn_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! dayjs/locale/zh-cn.js */ \"../node_modules/dayjs/locale/zh-cn.js\");\n\n\n //intl於ie11支援度不好因此此處不採用\n\n//若無引入此plugin,則僅能解析用/或-分隔年月日 並於日期和時間用[T t \\s]分隔  時間間用:分隔,也是不傳入format預設行為\n//引入後可以用[- : . ( ) \\s]當作分隔符號,當然要傳入該format參數\n\n\n //引入即代表register該locale(看引入方法即知是sideEffect module)\n\ndayjs__WEBPACK_IMPORTED_MODULE_2__.extend(dayjs_plugin_updateLocale_js__WEBPACK_IMPORTED_MODULE_5__);\ndayjs__WEBPACK_IMPORTED_MODULE_2__.extend(_parseFormat_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\ndayjs__WEBPACK_IMPORTED_MODULE_2__.extend(dayjs_plugin_localeData_js__WEBPACK_IMPORTED_MODULE_4__);\ndayjs__WEBPACK_IMPORTED_MODULE_2__.updateLocale(\"zh-tw\", {\n  parse: {\n    localeEraShort: [/\\d{1,3}/, function (input) {\n      console.log(input);\n      this.year = 1911 + +input;\n    }],\n    //對應format為yy\n    localeEra: [/民國\\d{1,3}/, function (input) {\n      console.log(input);\n      this.year = 1911 + +input.slice(2);\n    }] //對應format為yyyy\n  }\n}); //支持民國紀年的輸入\n\nvar locales = {\n  \"en\": \"en\",\n  \"zh-TW\": \"zh-tw\",\n  \"zh-CN\": \"zh-cn\"\n};\ndayjs__WEBPACK_IMPORTED_MODULE_2__.prototype.toString = function () {\n  return this.format(\"YYYY-MM-DD HH:mm:ss\"); //改成excel讀得懂的日期格式\n  // return this.$d.toUTCString() 原本預設行為,this.$d是jd Date物件\n};\n\n//新增Plugin 和 wrapper\n\n\n\n//# sourceURL=webpack:///./src/util_time/initDayjs.mjs?");

/***/ }),

/***/ "./src/util_time/parseFormat.mjs":
/*!***************************************!*\
  !*** ./src/util_time/parseFormat.mjs ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../node_modules/core-js/modules/es.regexp.exec.js\");\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ \"../node_modules/core-js/modules/es.string.replace.js\");\n/* harmony import */ var core_js_modules_es_string_match_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.string.match.js */ \"../node_modules/core-js/modules/es.string.match.js\");\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../node_modules/core-js/modules/es.array.concat.js\");\n/* harmony import */ var core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.array.map.js */ \"../node_modules/core-js/modules/es.array.map.js\");\n\n\n\n\n\n//改自costumParseFormat這個plugin, 修改處為(第11行)  新增處為(150-159行,190行)\n//為了增加各國本地紀年支持(本地紀年foramt是yyyy或yy),但locale中要有設置parse屬性,可透過updateLocale這個plugin定義該屬性\n\nfunction u(formatStr, formats) {\n  return formatStr.replace(/(\\[[^\\]]+])|(LTS?|l{1,4}|L{1,4})/g, function (_, a, b) {\n    var B = b && b.toUpperCase();\n    return a || formats[b] || englishFormats[b] || t(formats[B]);\n  });\n}\n;\nvar formattingTokens = /(\\[[^[]*\\])|([-:/.()\\s]+)|(A|a|YYYY|YY?|yyyy|yy|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g;\nvar match1 = /\\d/; // 0 - 9\n\nvar match2 = /\\d\\d/; // 00 - 99\n\nvar match3 = /\\d{3}/; // 000 - 999\n\nvar match4 = /\\d{4}/; // 0000 - 9999\n\nvar match1to2 = /\\d\\d?/; // 0 - 99\n\nvar matchSigned = /[+-]?\\d+/; // -inf - inf\n\nvar matchOffset = /[+-]\\d\\d:?(\\d\\d)?|Z/; // +00:00 -00:00 +0000 or -0000 +00 or Z\n\nvar matchWord = /\\d*[^\\s\\d-_:/()]+/; // Word\n\nvar locale = {};\nvar parseTwoDigitYear = function parseTwoDigitYear(input) {\n  input = +input;\n  return input + (input > 68 ? 1900 : 2000);\n};\nfunction offsetFromString(string) {\n  if (!string) return 0;\n  if (string === 'Z') return 0;\n  var parts = string.match(/([+-]|\\d\\d)/g);\n  var minutes = +(parts[1] * 60) + (+parts[2] || 0);\n  return minutes === 0 ? 0 : parts[0] === '+' ? -minutes : minutes; // eslint-disable-line no-nested-ternary\n}\n\nvar addInput = function addInput(property) {\n  return function (input) {\n    this[property] = +input;\n  };\n};\nvar zoneExpressions = [matchOffset, function (input) {\n  var zone = this.zone || (this.zone = {});\n  zone.offset = offsetFromString(input);\n}];\nvar getLocalePart = function getLocalePart(name) {\n  var part = locale[name];\n  return part && (part.indexOf ? part : part.s.concat(part.f));\n};\nvar meridiemMatch = function meridiemMatch(input, isLowerCase) {\n  var isAfternoon;\n  var _locale = locale,\n    meridiem = _locale.meridiem;\n  if (!meridiem) {\n    isAfternoon = input === (isLowerCase ? 'pm' : 'PM');\n  } else {\n    for (var i = 1; i <= 24; i += 1) {\n      // todo: fix input === meridiem(i, 0, isLowerCase)\n      if (input.indexOf(meridiem(i, 0, isLowerCase)) > -1) {\n        isAfternoon = i > 12;\n        break;\n      }\n    }\n  }\n  return isAfternoon;\n};\nvar expressions = {\n  A: [matchWord, function (input) {\n    this.afternoon = meridiemMatch(input, false);\n  }],\n  a: [matchWord, function (input) {\n    this.afternoon = meridiemMatch(input, true);\n  }],\n  S: [match1, function (input) {\n    this.milliseconds = +input * 100;\n  }],\n  SS: [match2, function (input) {\n    this.milliseconds = +input * 10;\n  }],\n  SSS: [match3, function (input) {\n    this.milliseconds = +input;\n  }],\n  s: [match1to2, addInput('seconds')],\n  ss: [match1to2, addInput('seconds')],\n  m: [match1to2, addInput('minutes')],\n  mm: [match1to2, addInput('minutes')],\n  H: [match1to2, addInput('hours')],\n  h: [match1to2, addInput('hours')],\n  HH: [match1to2, addInput('hours')],\n  hh: [match1to2, addInput('hours')],\n  D: [match1to2, addInput('day')],\n  DD: [match2, addInput('day')],\n  Do: [matchWord, function (input) {\n    var _locale2 = locale,\n      ordinal = _locale2.ordinal;\n    var _input$match = input.match(/\\d+/);\n    this.day = _input$match[0];\n    if (!ordinal) return;\n    for (var i = 1; i <= 31; i += 1) {\n      if (ordinal(i).replace(/\\[|\\]/g, '') === input) {\n        this.day = i;\n      }\n    }\n  }],\n  M: [match1to2, addInput('month')],\n  MM: [match2, addInput('month')],\n  MMM: [matchWord, function (input) {\n    var months = getLocalePart('months');\n    var monthsShort = getLocalePart('monthsShort');\n    var matchIndex = (monthsShort || months.map(function (_) {\n      return _.substr(0, 3);\n    })).indexOf(input) + 1;\n    if (matchIndex < 1) {\n      throw new Error();\n    }\n    this.month = matchIndex % 12 || matchIndex;\n  }],\n  MMMM: [matchWord, function (input) {\n    var months = getLocalePart('months');\n    var matchIndex = months.indexOf(input) + 1;\n    if (matchIndex < 1) {\n      throw new Error();\n    }\n    this.month = matchIndex % 12 || matchIndex;\n  }],\n  Y: [matchSigned, addInput('year')],\n  YY: [match2, function (input) {\n    this.year = parseTwoDigitYear(input);\n  }],\n  YYYY: [match4, addInput('year')],\n  yyyy: function getFromLocale() {\n    var _locale3, _locale3$parse;\n    //用了?. optional chaining 取代這種寫法 locale.parse && locale.parse.localeEra, ?.也可用作型別檢查並呼叫等操作\n    var handle = (_locale3 = locale) !== null && _locale3 !== void 0 && (_locale3$parse = _locale3.parse) !== null && _locale3$parse !== void 0 && _locale3$parse.localeEra ? locale.parse.localeEra : [match4, addInput('year')];\n    return handle;\n  },\n  yy: function getFromLocale() {\n    var _locale4, _locale4$parse;\n    var defaultAddInput = function defaultAddInput(input) {\n      this.year = parseTwoDigitYear(input);\n    };\n    var handle = (_locale4 = locale) !== null && _locale4 !== void 0 && (_locale4$parse = _locale4.parse) !== null && _locale4$parse !== void 0 && _locale4$parse.localeEra ? locale.parse.localeEraShort : [match2, defaultAddInput];\n    return handle;\n  },\n  Z: zoneExpressions,\n  ZZ: zoneExpressions\n};\nfunction correctHours(time) {\n  var afternoon = time.afternoon;\n  if (afternoon !== undefined) {\n    var hours = time.hours;\n    if (afternoon) {\n      if (hours < 12) {\n        time.hours += 12;\n      }\n    } else if (hours === 12) {\n      time.hours = 0;\n    }\n    delete time.afternoon;\n  }\n}\nfunction makeParser(format) {\n  format = u(format, locale && locale.formats);\n  var array = format.match(formattingTokens);\n  var length = array.length;\n  for (var i = 0; i < length; i += 1) {\n    var token = array[i];\n    var parseTo = expressions[token];\n    if (typeof parseTo === \"function\") {\n      parseTo = parseTo();\n    } //format get from locale setting\n    var regex = parseTo && parseTo[0];\n    var parser = parseTo && parseTo[1];\n    if (parser) {\n      array[i] = {\n        regex: regex,\n        parser: parser\n      };\n    } else {\n      array[i] = token.replace(/^\\[|\\]$/g, '');\n    }\n  }\n  return function (input) {\n    var time = {};\n    for (var _i = 0, start = 0; _i < length; _i += 1) {\n      var _token = array[_i];\n      if (typeof _token === 'string') {\n        start += _token.length;\n      } else {\n        var _regex = _token.regex,\n          _parser = _token.parser;\n        var part = input.substr(start);\n        var match = _regex.exec(part);\n        // console.log(_regex,match)\n        var value = match[0];\n        _parser.call(time, value);\n        input = input.replace(value, '');\n      }\n    }\n    correctHours(time);\n    return time;\n  };\n}\nvar parseFormattedInput = function parseFormattedInput(input, format, utc) {\n  try {\n    if (['x', 'X'].indexOf(format) > -1) return new Date((format === 'X' ? 1000 : 1) * input);\n    var parser = makeParser(format);\n    var _parser2 = parser(input),\n      year = _parser2.year,\n      month = _parser2.month,\n      day = _parser2.day,\n      hours = _parser2.hours,\n      minutes = _parser2.minutes,\n      seconds = _parser2.seconds,\n      milliseconds = _parser2.milliseconds,\n      zone = _parser2.zone;\n    var now = new Date();\n    var d = day || (!year && !month ? now.getDate() : 1);\n    var y = year || now.getFullYear();\n    var M = 0;\n    if (!(year && !month)) {\n      M = month > 0 ? month - 1 : now.getMonth();\n    }\n    var h = hours || 0;\n    var m = minutes || 0;\n    var s = seconds || 0;\n    var ms = milliseconds || 0;\n    if (zone) {\n      return new Date(Date.UTC(y, M, d, h, m, s, ms + zone.offset * 60 * 1000));\n    }\n    if (utc) {\n      return new Date(Date.UTC(y, M, d, h, m, s, ms));\n    }\n    return new Date(y, M, d, h, m, s, ms);\n  } catch (e) {\n    console.log(e);\n    return new Date(''); // Invalid Date\n  }\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (o, C, d) {\n  //C means Dayjs  //d means dayjs //o means options()\n  d.p.customParseFormat = true;\n  if (o && o.parseTwoDigitYear) {\n    parseTwoDigitYear = o.parseTwoDigitYear;\n  }\n  var proto = C.prototype;\n  var oldParse = proto.parse;\n  proto.parse = function (cfg) {\n    var date = cfg.date,\n      utc = cfg.utc,\n      args = cfg.args;\n    this.$u = utc;\n    var format = args[1];\n    if (typeof format === 'string') {\n      var isStrictWithoutLocale = args[2] === true;\n      var isStrictWithLocale = args[3] === true;\n      var isStrict = isStrictWithoutLocale || isStrictWithLocale;\n      var pl = args[2];\n      if (isStrictWithLocale) {\n        pl = args[2];\n      }\n      locale = this.$locale();\n      if (!isStrictWithoutLocale && pl) {\n        locale = d.Ls[pl];\n      }\n\n      // console.log(\"localeNow\",locale.name)\n\n      this.$d = parseFormattedInput(date, format, utc);\n      this.init();\n      if (pl && pl !== true) this.$L = this.locale(pl).$L;\n      if (isStrict && date !== this.format(format)) {\n        this.$d = new Date('');\n      } // reset global locale to make parallel unit test\n\n      locale = {};\n    } else if (format instanceof Array) {\n      var len = format.length;\n      for (var i = 1; i <= len; i += 1) {\n        args[1] = format[i - 1];\n        var result = d.apply(this, args);\n        if (result.isValid()) {\n          this.$d = result.$d;\n          this.$L = result.$L;\n          this.init();\n          break;\n        }\n        if (i === len) this.$d = new Date('');\n      }\n    } else {\n      oldParse.call(this, cfg);\n    }\n  };\n});\n\n//# sourceURL=webpack:///./src/util_time/parseFormat.mjs?");

/***/ })

}]);